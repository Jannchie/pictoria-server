"""init

Revision ID: 8a745d46e446
Revises: 
Create Date: 2025-01-06 01:32:35.433261

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8a745d46e446'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('posts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('extension', sa.String(), nullable=False),
    sa.Column('full_path', sa.String(), sa.Computed("file_path || '/' || file_name || '.' || extension", ), nullable=True),
    sa.Column('aspect_ratio', sa.Float(), sa.Computed('width * 1.0 / NULLIF(height, 0)', ), nullable=True),
    sa.Column('width', sa.Integer(), server_default='0', nullable=False),
    sa.Column('height', sa.Integer(), server_default='0', nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('score', sa.Integer(), server_default='0', nullable=False),
    sa.Column('rating', sa.Integer(), server_default='0', nullable=False),
    sa.Column('description', sa.String(), server_default='', nullable=False),
    sa.Column('meta', sa.String(), server_default='', nullable=False),
    sa.Column('md5', sa.String(), server_default='', nullable=False),
    sa.Column('size', sa.Integer(), server_default='0', nullable=False),
    sa.Column('source', sa.String(), server_default='', nullable=False),
    sa.Column('caption', sa.String(), server_default='', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.create_index('idx_file_path_name_extension', ['file_path', 'file_name', 'extension'], unique=True)
        batch_op.create_index(batch_op.f('ix_posts_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_extension'), ['extension'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_file_name'), ['file_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_file_path'), ['file_path'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_height'), ['height'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_md5'), ['md5'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_meta'), ['meta'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_rating'), ['rating'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_score'), ['score'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_size'), ['size'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_source'), ['source'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_updated_at'), ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_width'), ['width'], unique=False)

    op.create_table('tag_groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=120), server_default='', nullable=False),
    sa.Column('color', sa.String(length=9), server_default='', nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['tag_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tag_groups', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tag_groups_name'), ['name'], unique=False)

    op.create_table('post_has_color',
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('color', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.PrimaryKeyConstraint('post_id', 'order')
    )
    op.create_table('tags',
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['tag_groups.id'], ),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('post_has_tag',
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('tag_name', sa.String(length=120), nullable=False),
    sa.Column('is_auto', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['tag_name'], ['tags.name'], ),
    sa.PrimaryKeyConstraint('post_id', 'tag_name')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('post_has_tag')
    op.drop_table('tags')
    op.drop_table('post_has_color')
    with op.batch_alter_table('tag_groups', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tag_groups_name'))

    op.drop_table('tag_groups')
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_posts_width'))
        batch_op.drop_index(batch_op.f('ix_posts_updated_at'))
        batch_op.drop_index(batch_op.f('ix_posts_source'))
        batch_op.drop_index(batch_op.f('ix_posts_size'))
        batch_op.drop_index(batch_op.f('ix_posts_score'))
        batch_op.drop_index(batch_op.f('ix_posts_rating'))
        batch_op.drop_index(batch_op.f('ix_posts_meta'))
        batch_op.drop_index(batch_op.f('ix_posts_md5'))
        batch_op.drop_index(batch_op.f('ix_posts_height'))
        batch_op.drop_index(batch_op.f('ix_posts_file_path'))
        batch_op.drop_index(batch_op.f('ix_posts_file_name'))
        batch_op.drop_index(batch_op.f('ix_posts_extension'))
        batch_op.drop_index(batch_op.f('ix_posts_created_at'))
        batch_op.drop_index('idx_file_path_name_extension')

    op.drop_table('posts')
    # ### end Alembic commands ###
